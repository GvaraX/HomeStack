{
  "name": "Social Media Content Automation",
  "nodes": [
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"oneOf\": [\n    {\n      \"type\": \"object\",\n      \"properties\": {\n        \"story\": {\n          \"type\": \"string\",\n          \"minLength\": 100,\n          \"description\": \"A complete narrative story with beginning, middle, and end\"\n        }\n      },\n      \"required\": [\"story\"],\n      \"additionalProperties\": false\n    },\n    {\n      \"type\": \"object\",\n      \"properties\": {\n        \"output\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"story\": {\n              \"type\": \"string\",\n              \"minLength\": 100,\n              \"description\": \"A complete narrative story with beginning, middle, and end\"\n            }\n          },\n          \"required\": [\"story\"],\n          \"additionalProperties\": false\n        }\n      },\n      \"required\": [\"output\"],\n      \"additionalProperties\": false\n    }\n  ]\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        260,
        220
      ],
      "id": "6bc033d0-b606-446d-ab00-2a709c6efdde",
      "name": "Structured Output Parser - 1"
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"oneOf\": [\n    {\n      \"type\": \"object\",\n      \"properties\": {\n        \"hook\": { \"type\": \"string\", \"minLength\": 1 },\n        \"conflict\": { \"type\": \"string\", \"minLength\": 1 },\n        \"climax\": { \"type\": \"string\", \"minLength\": 1 },\n        \"resolution\": { \"type\": \"string\", \"minLength\": 1 },\n        \"cta\": { \"type\": \"string\", \"minLength\": 1 }\n      },\n      \"required\": [\"hook\", \"conflict\", \"climax\", \"resolution\", \"cta\"],\n      \"additionalProperties\": false\n    },\n    {\n      \"type\": \"object\",\n      \"properties\": {\n        \"output\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"hook\": { \"type\": \"string\", \"minLength\": 1 },\n            \"conflict\": { \"type\": \"string\", \"minLength\": 1 },\n            \"climax\": { \"type\": \"string\", \"minLength\": 1 },\n            \"resolution\": { \"type\": \"string\", \"minLength\": 1 },\n            \"cta\": { \"type\": \"string\", \"minLength\": 1 }\n          },\n          \"required\": [\"hook\", \"conflict\", \"climax\", \"resolution\", \"cta\"],\n          \"additionalProperties\": false\n        }\n      },\n      \"required\": [\"output\"],\n      \"additionalProperties\": false\n    }\n  ]\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        500,
        300
      ],
      "id": "aa509c1f-5eaa-4fa0-b602-9325406bdb8d",
      "name": "Structured Output Parser - 2"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=**Task:**  \nWrite a short story (3–5 paragraphs) about {{ $json.Topic }} that should serve as a foundation for a visual narrative.  \n\n**Requirements:**  \n1. **Character:**  \n   - Give the character a unique, creative name.  \n   - Describe it as charming, visually appealing, and full of personality. \n\n2. **Story:**  \n   - Include a clear theme (e.g., friendship, adventure, self-discovery).\n   - Use vivid, sensory language to inspire visual storytelling.\n\n3. **Output Format:**  \n   - Return a JSON object with:  \n     - `\"story\"`: The full narrative (plain text).",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "You are a whimsical and imaginative storyteller, specialized in crafting short, visually rich narratives. Your stories should evoke warmth, charm, and emotional connection, with a focus on unique, fluffy protagonists. Always ensure creative naming, vivid descriptions, and a clear thematic core. Write in plain text, and strictly follow JSON output formatting when required."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        240,
        0
      ],
      "id": "305008e4-a203-4700-8b8a-e3666f41c1c8",
      "name": "Generate a Short Story",
      "retryOnFail": true,
      "maxTries": 5
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=**Task:**  \nBreak down the narrative of the story into a clear outline that highlights the key structural elements.\n\n**Instructions:**  \n- Identify and list the narrative components:\n  - **Hook:** (0–5 seconds of a video).\n  - **Conflict/Challenge:** (5–10 seconds).\n  - **Climax/Turning Point:** (10-15 seconds)\n  - **Resolution:** and lesson learned (15–30 seconds).\n  - **Call-to-Action (CTA) or Question:** A prompt that engages the audience at the end.\n\n- **Output Format:** Return a JSON object with the following keys without any introductory messages or explanations:\n  - `\"hook\"`\n  - `\"conflict\"`\n  - `\"climax\"`\n  - `\"resolution\"`\n  - `\"cta\"`",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "You are a meticulous narrative architect, skilled at dissecting stories into their core structural elements for visual or animated storytelling. Your expertise lies in identifying key moments that maximize emotional engagement, pacing, and audience retention. Always deliver concise, actionable breakdowns tailored for short-form video (30 seconds or less) and strictly adhere to JSON formatting."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        600,
        0
      ],
      "id": "38a18565-3052-4239-a4d8-857bc605c3cf",
      "name": "Develop a Narrative Outline",
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 1000
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=**Task:**  \nGenerate a precise visual description of characters and story settings. These descriptions will be used verbatim for consistent AI image generation.\n\n**Requirements:**  \n1. **Character Description:**  \n   - Provide a highly detailed description of the main character's physical appearance.\n   - Include specific clothing or accessories in details.\n   - Exclude all behavioral/personality details.\n\n2. **Setting Description:**  \n   - Location: Specific environment (e.g., forest, city, room).  \n   - Atmosphere: Time of day, lighting, weather.  \n   - Key visual elements: Objects, colors, textures.  \n\n**Output Format:**  \nReturn a JSON object with the following keys:\n  - `\"character\"`: A concise description of tcharacter physical appearance (e.g., \"A fluffy tabby cat with bright green eyes, soft orange fur, and a tiny blue bowtie.\")\n  - `\"setting\"`: A concise description of the visual environment (e.g., \"A sunlit garden with blooming flowers and a stone pathway, bathed in warm afternoon light.\")\n\n**Example output:**\n{\n  \"character\": \"A charming teddy bear named Fluffington...\",\n  \"setting\": \"Whispering Woods during a stormy night...\"\n}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "You are a highly detail-oriented visual descriptor specializing in creating consistent, image-generation-ready descriptions of characters and settings. Your focus is purely on physical appearance and environmental visuals—avoid all personality, behavior, or narrative elements. Descriptions must be concise yet rich in visual detail for perfect consistency across multiple scenes."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        960,
        0
      ],
      "id": "b4226334-d54c-4c4e-97ec-7dc190d6a895",
      "name": "Develop Character and Setting",
      "retryOnFail": true,
      "maxTries": 5
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Translate the story into six distinct scenes that visually narrate the plot with rich, dynamic detail. Leverage the detailed character and setting descriptions from the input variables and incorporate the narrative outline elements to guide the scene structure.\n\n**Instructions:**  \n- Create **6 scenes** (as a JSON array).  \n- **Rules for Each Scene:**  \n  - **Scene 1:** Introduce the character’s problem—convey an immediate sense of challenge or conflict in a visually engaging way.  \n  - **Scene 2:** Show the character trying and humorously failing at a relatable task, using dynamic action and vivid imagery that emphasize the character’s unique traits.  \n  - **Scene 3:** Depict a turning point with a sudden burst of insight or realization, using striking visuals that underline the character's emerging strength.  \n  - **Scene 4:** Portray the character’s creative success with intricate details that highlight both the unique character traits and the vibrant setting.  \n  - **Scene 5:** Illustrate a moment of joyful celebration or recognition of the character’s success, with lively interactions and colorful details that highlight the impact of their journey.  \n  - **Scene 6:** Conclude with a heartwarming resolution, delivering a clear visual lesson or takeaway with emotional impact.  \n- **Important:**  \n  - **Each scene description must be 2–3 sentences long.**  \n  - **Include the full, exact `character` description verbatim in every scene.** Do not use variable placeholders like `$character`; the description should appear in full detail (e.g., color, species, clothing, and unique features).  \n  - **Integrate the full `setting` details verbatim into each scene,** ensuring the background is vivid, consistent, and contextually appropriate.  \n  - **Describe clear actions and interactions** for the character: what the character is doing, its facial expressions, interactions with other characters (if any), and any specific objects or environmental elements—avoiding any human-related elements.  \n  - Use a rich, descriptive style similar to the following example:  \n    > \"A bright yellow duck, wearing oversized mirrored sunglasses and a tropical flower necklace, balances expertly on a surfboard, cutting through the crest of an enormous wave. The water is a swirling mix of blues and greens, foamy spray frozen in time as it arcs around the duck’s outstretched wings. The horizon stretches endlessly in the background, where the setting sun casts a golden glow across the ocean’s surface.\"\n\n**Output Format:**  \nReturn a JSON array for the 6 visual scenes where each element is an object with the below keys:\n- `\"character\"`: {{ $('Develop Character and Setting').item.json.output.character }} \n- `\"scene_description\"`: a string with a detailed, visually rich description that explicitly includes the full `character` and `setting` descriptions (without placeholders), and clearly describes the character's actions, expressions, and interactions (with other characters, if applicable) in each scene.",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "You are a cinematic storyboard artist specializing in visually rich, dynamic scene descriptions for animated narratives. Your expertise lies in translating story beats into vivid, frame-worthy imagery while maintaining strict consistency with character and setting details. Every scene must include the full character/setting descriptions verbatim and focus on action-driven visuals—no introspective or humanized elements. /no_think"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        1680,
        0
      ],
      "id": "71384556-73ab-4dfe-8ffc-a72ed4298c6f",
      "name": "Generate Visual Scenes",
      "retryOnFail": true,
      "maxTries": 5
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"oneOf\": [\n    {\n      \"type\": \"object\",\n      \"properties\": {\n        \"character\": {\n          \"type\": \"string\",\n          \"minLength\": 10,\n          \"description\": \"Detailed description of the main character\"\n        },\n        \"setting\": {\n          \"type\": \"string\",\n          \"minLength\": 10,\n          \"description\": \"Vivid description of the story setting\"\n        }\n      },\n      \"required\": [\"character\", \"setting\"],\n      \"additionalProperties\": false\n    },\n    {\n      \"type\": \"object\",\n      \"properties\": {\n        \"output\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"character\": {\n              \"type\": \"string\",\n              \"minLength\": 10,\n              \"description\": \"Detailed description of the main character\"\n            },\n            \"setting\": {\n              \"type\": \"string\",\n              \"minLength\": 10,\n              \"description\": \"Vivid description of the story setting\"\n            }\n          },\n          \"required\": [\"character\", \"setting\"],\n          \"additionalProperties\": false\n        }\n      },\n      \"required\": [\"output\"],\n      \"additionalProperties\": false\n    }\n  ]\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        1040,
        300
      ],
      "id": "c4e0846c-ac67-4e8d-91ed-6a3e99d977d5",
      "name": "Structured Output Parser - 3"
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"oneOf\": [\n    {\n      \"type\": \"array\",\n      \"minItems\": 6,\n      \"maxItems\": 6,\n      \"items\": [\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"character\": {\n              \"type\": \"string\",\n              \"minLength\": 50\n            },\n            \"scene_description\": {\n              \"type\": \"string\",\n              \"minLength\": 50\n            }\n          },\n          \"required\": [\"character\", \"scene_description\"],\n          \"additionalProperties\": false\n        },\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"character\": {\n              \"type\": \"string\",\n              \"minLength\": 50\n            },\n            \"scene_description\": {\n              \"type\": \"string\",\n              \"minLength\": 50\n            }\n          },\n          \"required\": [\"character\", \"scene_description\"],\n          \"additionalProperties\": false\n        },\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"character\": {\n              \"type\": \"string\",\n              \"minLength\": 50\n            },\n            \"scene_description\": {\n              \"type\": \"string\",\n              \"minLength\": 50\n            }\n          },\n          \"required\": [\"character\", \"scene_description\"],\n          \"additionalProperties\": false\n        },\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"character\": {\n              \"type\": \"string\",\n              \"minLength\": 50\n            },\n            \"scene_description\": {\n              \"type\": \"string\",\n              \"minLength\": 50\n            }\n          },\n          \"required\": [\"character\", \"scene_description\"],\n          \"additionalProperties\": false\n        },\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"character\": {\n              \"type\": \"string\",\n              \"minLength\": 50\n            },\n            \"scene_description\": {\n              \"type\": \"string\",\n              \"minLength\": 50\n            }\n          },\n          \"required\": [\"character\", \"scene_description\"],\n          \"additionalProperties\": false\n        },\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"character\": {\n              \"type\": \"string\",\n              \"minLength\": 50\n            },\n            \"scene_description\": {\n              \"type\": \"string\",\n              \"minLength\": 50\n            }\n          },\n          \"required\": [\"character\", \"scene_description\"],\n          \"additionalProperties\": false\n        }\n      ],\n      \"additionalProperties\": false\n    },\n    {\n      \"type\": \"object\",\n      \"properties\": {\n        \"output\": {\n          \"type\": \"array\",\n          \"minItems\": 6,\n          \"maxItems\": 6,\n          \"items\": [\n            {\n              \"type\": \"object\",\n              \"properties\": {\n                \"character\": {\n                  \"type\": \"string\",\n                  \"minLength\": 50\n                },\n                \"scene_description\": {\n                  \"type\": \"string\",\n                  \"minLength\": 50\n                }\n              },\n              \"required\": [\"character\", \"scene_description\"],\n              \"additionalProperties\": false\n            },\n            {\n              \"type\": \"object\",\n              \"properties\": {\n                \"character\": {\n                  \"type\": \"string\",\n                  \"minLength\": 50\n                },\n                \"scene_description\": {\n                  \"type\": \"string\",\n                  \"minLength\": 50\n                }\n              },\n              \"required\": [\"character\", \"scene_description\"],\n              \"additionalProperties\": false\n            },\n            {\n              \"type\": \"object\",\n              \"properties\": {\n                \"character\": {\n                  \"type\": \"string\",\n                  \"minLength\": 50\n                },\n                \"scene_description\": {\n                  \"type\": \"string\",\n                  \"minLength\": 50\n                }\n              },\n              \"required\": [\"character\", \"scene_description\"],\n              \"additionalProperties\": false\n            },\n            {\n              \"type\": \"object\",\n              \"properties\": {\n                \"character\": {\n                  \"type\": \"string\",\n                  \"minLength\": 50\n                },\n                \"scene_description\": {\n                  \"type\": \"string\",\n                  \"minLength\": 50\n                }\n              },\n              \"required\": [\"character\", \"scene_description\"],\n              \"additionalProperties\": false\n            },\n            {\n              \"type\": \"object\",\n              \"properties\": {\n                \"character\": {\n                  \"type\": \"string\",\n                  \"minLength\": 50\n                },\n                \"scene_description\": {\n                  \"type\": \"string\",\n                  \"minLength\": 50\n                }\n              },\n              \"required\": [\"character\", \"scene_description\"],\n              \"additionalProperties\": false\n            },\n            {\n              \"type\": \"object\",\n              \"properties\": {\n                \"character\": {\n                  \"type\": \"string\",\n                  \"minLength\": 50\n                },\n                \"scene_description\": {\n                  \"type\": \"string\",\n                  \"minLength\": 50\n                }\n              },\n              \"required\": [\"character\", \"scene_description\"],\n              \"additionalProperties\": false\n            }\n          ],\n          \"additionalProperties\": false\n        }\n      },\n      \"required\": [\"output\"],\n      \"additionalProperties\": false\n    }\n  ]\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        1860,
        220
      ],
      "id": "a4524083-79fa-4208-9d80-302ec43d6e1e",
      "name": "Structured Output Parser - 5"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $executionId }}",
        "contextWindowLength": 50
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        1280,
        360
      ],
      "id": "ad91d5eb-81b7-4997-90a1-41f85342c087",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Craft a concise 30-second narrative script to be used as a voiceover or text in the video. The script should encapsulate the story’s hook, conflict, climax, and resolution, ending with an engaging call-to-action or question.\n\n**Instructions:**  \n- Write in plain text only.  \n- The narrative must be written in the specified language: {{ $('On form submission').last().json['Language'] || \"French\" }}.\n- **Structure the script according to the following timeline:**  \n  - **0–5 sec (Hook):** Begin mid-action with the character and their initial problem. Use the `hook` element.  \n  - **5–15 sec (Conflict/Humor):** Highlight the struggle with a humorous twist using the character’s traits. Use the `conflict` element.  \n  - **15–30 sec (Resolution + Lesson):** Show how the character turns the problem around, incorporating the `climax` and `resolution` elements, and conclude with the `cta`.  \n- **Do not include any labels, markers, or extraneous sound descriptions (e.g., \"(0-5 sec - Hook)\" or \"Sounds...\").**  \n- **Enforce a maximum duration of 30 seconds for the entire script.**  \n\n- **Output Format:**  \nReturn the response as JSON following this structure:\n```\njson\n{\n  \"script\": \"<The full narrative script written as plain text in the specified language>\"\n}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "You are a professional scriptwriter specializing in ultra-concise, emotionally engaging narratives for short-form video content. Your expertise lies in structuring 30-second stories with perfect pacing—hooks that grab attention, conflicts that entertain, and resolutions that deliver satisfying lessons. You strictly adhere to time constraints (5s/10s/15s segments) and write in clean, voiceover-ready plain text without any technical markers. /no_think"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        1320,
        0
      ],
      "id": "c55a539f-9fea-4269-b398-5f4191dd5153",
      "name": "Generate Narrative Script",
      "retryOnFail": true,
      "maxTries": 5
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"oneOf\": [\n    {\n      \"type\": \"object\",\n      \"properties\": {\n        \"script\": {\n          \"type\": \"string\",\n          \"minLength\": 100,\n          \"description\": \"A complete narrative script combining character action, conflict resolution, and a call-to-action\"\n        }\n      },\n      \"required\": [\"script\"],\n      \"additionalProperties\": false\n    },\n    {\n      \"type\": \"object\",\n      \"properties\": {\n        \"output\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"script\": {\n              \"type\": \"string\",\n              \"minLength\": 100,\n              \"description\": \"A complete narrative script combining character action, conflict resolution, and a call-to-action\"\n            }\n          },\n          \"required\": [\"script\"],\n          \"additionalProperties\": false\n        }\n      },\n      \"required\": [\"output\"],\n      \"additionalProperties\": false\n    }\n  ]\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        1600,
        300
      ],
      "id": "18c09308-85fc-480d-aacd-a43835e40458",
      "name": "Structured Output Parser - 4"
    },
    {
      "parameters": {
        "model": "qwen3:latest",
        "options": {
          "temperature": 0.9,
          "format": "json"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        780,
        360
      ],
      "id": "9225cfee-7def-47cc-b488-87d0fe7caddd",
      "name": "Ollama Chat Model",
      "credentials": {
        "ollamaApi": {
          "id": "8S9SL48AdoJzxyaX",
          "name": "Ollama account"
        }
      }
    },
    {
      "parameters": {
        "formTitle": "Social Media Content Automation",
        "formFields": {
          "values": [
            {
              "fieldLabel": "Topic",
              "fieldType": "textarea",
              "placeholder": "=",
              "requiredField": true
            },
            {
              "fieldLabel": "Language",
              "fieldType": "dropdown",
              "fieldOptions": {
                "values": [
                  {
                    "option": "French"
                  },
                  {
                    "option": "English"
                  }
                ]
              }
            }
          ]
        },
        "options": {
          "buttonLabel": "Generate Video",
          "path": "generate-video",
          "respondWithOptions": {
            "values": {
              "formSubmittedText": "Your video is being generated!"
            }
          }
        }
      },
      "type": "n8n-nodes-base.formTrigger",
      "typeVersion": 2.2,
      "position": [
        0,
        0
      ],
      "id": "4717edc7-19cf-4458-bd37-06f45f720f51",
      "name": "On form submission",
      "webhookId": "b86f3d53-d2d5-42e9-9edc-b52ee891419c"
    }
  ],
  "pinData": {
    "On form submission": [
      {
        "json": {
          "Topic": "an astronaut cat vising the moon for the first time",
          "Language": "English",
          "submittedAt": "2025-05-25T22:36:25.544+02:00",
          "formMode": "test"
        }
      }
    ]
  },
  "connections": {
    "Structured Output Parser - 1": {
      "ai_outputParser": [
        [
          {
            "node": "Generate a Short Story",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser - 2": {
      "ai_outputParser": [
        [
          {
            "node": "Develop a Narrative Outline",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Generate a Short Story": {
      "main": [
        [
          {
            "node": "Develop a Narrative Outline",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Develop a Narrative Outline": {
      "main": [
        [
          {
            "node": "Develop Character and Setting",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Develop Character and Setting": {
      "main": [
        [
          {
            "node": "Generate Narrative Script",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser - 3": {
      "ai_outputParser": [
        [
          {
            "node": "Develop Character and Setting",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser - 5": {
      "ai_outputParser": [
        [
          {
            "node": "Generate Visual Scenes",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "Develop a Narrative Outline",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "Develop Character and Setting",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "Generate Visual Scenes",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "Generate Narrative Script",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "Generate a Short Story",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Generate Narrative Script": {
      "main": [
        [
          {
            "node": "Generate Visual Scenes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser - 4": {
      "ai_outputParser": [
        [
          {
            "node": "Generate Narrative Script",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Generate a Short Story",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Develop a Narrative Outline",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Develop Character and Setting",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Generate Narrative Script",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Generate Visual Scenes",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "On form submission": {
      "main": [
        [
          {
            "node": "Generate a Short Story",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "a4b018ab-fcef-4d3d-a84e-645a37b4c4a9",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "121c0a0c44ee23a0e3cfd057cf4fe107dbf61a7b0ac4cfdcc4832335e630bf85"
  },
  "id": "FpaNUFcQS1RPSOjp",
  "tags": []
}