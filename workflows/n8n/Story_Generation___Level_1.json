{
  "name": "Story Generation - Level 1",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -700,
        -20
      ],
      "id": "406a0116-74f6-4047-93cc-778b2a0fc4ba",
      "name": "When clicking ‘Test workflow’"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "qwen3:latest",
          "mode": "id"
        },
        "messages": {
          "values": [
            {
              "content": "### Task1:  \nWrite a short story (3–5 paragraphs) about a fluffy animal that should serve as a foundation for a visual narrative.  \n\n**Requirements:**  \n1. **Character:**  \n   - Give the character a unique, creative name.  \n   - Describe it as charming, visually appealing, and full of personality. \n\n2. **Story:**  \n   - Include a clear theme (e.g., friendship, adventure, self-discovery).\n   - Use vivid, sensory language to inspire visual storytelling.\n\n---\n\n### Task2:\nCraft a concise 30-second narrative script to be used as a voiceover or text in the video. The script should encapsulate the story’s hook, conflict, climax, and resolution, ending with an engaging call-to-action or question.\n\n**Instructions:**  \n- Write in plain text only.  \n- The narrative must be written in the specified language: English.\n- **Structure the script according to the following timeline:**  \n  - **0–5 sec (Hook):** Begin mid-action with the character and their initial problem. Use the `hook` element.  \n  - **5–15 sec (Conflict/Humor):** Highlight the struggle with a humorous twist using the character’s traits. Use the `conflict` element.  \n  - **15–30 sec (Resolution + Lesson):** Show how the character turns the problem around, incorporating the `climax` and `resolution` elements, and conclude with the `cta`.  \n- **Do not include any labels, markers, or extraneous sound descriptions (e.g., \"(0-5 sec - Hook)\" or \"Sounds...\").**  \n- **Enforce a maximum duration of 30 seconds for the entire script.**  \n\n---\n\n### Task3:\nTranslate the story into six distinct scenes that visually narrate the plot with rich, dynamic detail. Leverage the detailed character and setting descriptions from the input variables and incorporate the narrative outline elements to guide the scene structure.\n\n**Instructions:**  \n- Create **6 scenes** (as a JSON array).  \n- **Rules for Each Scene:**  \n  - **Scene 1:** Introduce the character’s problem—convey an immediate sense of challenge or conflict in a visually engaging way.  \n  - **Scene 2:** Show the character trying and humorously failing at a relatable task, using dynamic action and vivid imagery that emphasize the character’s unique traits.  \n  - **Scene 3:** Depict a turning point with a sudden burst of insight or realization, using striking visuals that underline the character's emerging strength.  \n  - **Scene 4:** Portray the character’s creative success with intricate details that highlight both the unique character traits and the vibrant setting.  \n  - **Scene 5:** Illustrate a moment of joyful celebration or recognition of the character’s success, with lively interactions and colorful details that highlight the impact of their journey.  \n  - **Scene 6:** Conclude with a heartwarming resolution, delivering a clear visual lesson or takeaway with emotional impact.  \n- **Important:**  \n  - **Each scene description must be 2–3 sentences long.**  \n  - **Include the full, exact `character` description verbatim in every scene.** Do not use variable placeholders like ` the character`; the description should appear in full detail (e.g., color, species, clothing, and unique features).  \n  - **Integrate the full `setting` details verbatim into each scene,** ensuring the background is vivid, consistent, and contextually appropriate.  \n  - **Describe clear actions and interactions** for the character: what the character is doing, its facial expressions, interactions with other characters (if any), and any specific objects or environmental elements—avoiding any human-related elements.  \n  - Use a rich, descriptive style similar to the following example:  \n    > \"A bright yellow duck, wearing oversized mirrored sunglasses and a tropical flower necklace, balances expertly on a surfboard, cutting through the crest of an enormous wave. The water is a swirling mix of blues and greens, foamy spray frozen in time as it arcs around the duck’s outstretched wings. The horizon stretches endlessly in the background, where the setting sun casts a golden glow across the ocean’s surface.\"\n\n---\n\n### Example Output Format:  \n```json\n{\n  \"scenes\": [\n    {\n      \"scene_description\": \"A highly detailed 3D render of...\"\n    },\n    // ...5 more scenes\n  ],\n  \"narrative\": \"[Punchy 30-second story in specified language]\"\n}\n```"
            },
            {
              "content": "You are a whimsical and imaginative storyteller, specialized in crafting short, visually rich narratives. Your stories should evoke warmth, charm, and emotional connection, with a focus on unique, fluffy protagonists. Always ensure creative naming, vivid descriptions, and a clear thematic core. Write in plain text, and strictly follow JSON output formatting when required.",
              "role": "system"
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -480,
        -20
      ],
      "id": "6440a1d4-062c-4243-a453-c29496a49c85",
      "name": "OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "rLJt2FFycy2KTZFg",
          "name": "Ollama"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "9828974f-3a65-4896-9eb8-4021eaf1232c",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "121c0a0c44ee23a0e3cfd057cf4fe107dbf61a7b0ac4cfdcc4832335e630bf85"
  },
  "id": "S0yrHiZ8iwf0ZlUi",
  "tags": []
}